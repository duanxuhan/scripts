#!/bin/bash
# 编译安装管理Redis
App=redis
AppName=Redis
AppBase=/App
AppDir=$AppBase/$App
AppProg=$AppDir/bin/redis-server
AppConf=$AppDir/redis.conf
AppUser=$App

AppSrcBase=/root/src
AppSrcFile=$App-*.tar.*
AppSrcDir=$(find $AppSrcBase -maxdepth 1 -name "$AppSrcFile" -type f 2> /dev/null | sed -e 's/.tar.*$//' -e 's/^.\///')

AppPort=$(grep 'port' $AppConf 2> /dev/null | awk '{print $2}')
AppPass=$(grep '^requirepass' $AppConf 2> /dev/null | awk '{print $2}')
AppPidDir=$(dirname $(grep 'pidfile' $AppConf 2> /dev/null | awk '{print $2}') 2> /dev/null)
AppLogDir=$(dirname $(grep 'logfile' $AppConf 2> /dev/null | awk -F'"' '{print $2}') 2> /dev/null)
AppDataDir=$(grep 'dir' $AppConf 2> /dev/null | awk '{print $2}')

RemoveFlag=0
InstallFlag=0
ScriptDir=$(cd $(dirname $0); pwd)
ScriptFile=$(basename $0)

# 获取PID
Pid()
{
    AppPid=$(ps ax | grep "$AppProg.*$AppPort" | grep -v "grep" | awk '{print $1}' 2> /dev/null)
}

# 安装
Install()
{
    Pid
    InstallFlag=1

    if [ -z "$AppPid" ]; then
        test -f "$AppProg" && echo "$AppName 已安装"
        [ $? -ne 0 ] && Update && Conf
    else
        echo "$AppName 正在运行"
    fi
}

# 更新
Update()
{
    Operate="更新"
    [ $InstallFlag -eq 1 ] && Operate="安装"
    [ $RemoveFlag -ne 1 ] && Backup

    cd $AppSrcBase
    test -d "$AppSrcDir" && rm -rf $AppSrcDir

    tar zxf $AppSrcFile || tar jxf $AppSrcFile || tar Jxf $AppSrcFile
    cd $AppSrcDir
    make PREFIX=$AppDir install

    if [ $? -eq 0 ]; then
        echo "$AppName ${Operate}成功"
    else
        echo "$AppName ${Operate}失败"
        exit 1
    fi
}

# 重装
Reinstall()
{
    Remove && Install
}

# 删除
Remove()
{
    Pid
    RemoveFlag=1

    if [ -z "$AppPid" ]; then
        if [ -d "$AppDir" ]; then
            rm -rf $AppDir && echo "删除 $AppName"
        else
            echo "$AppName 未安装"
        fi
    else
        echo "$AppName 正在运行" && exit
    fi
}

# 备份
Backup()
{
    if [ -f "$AppProg" ]; then
        cd $AppBase
        cp -r $App "${App}.$(date +%Y%m%d%H%M%S)"
        [ $? -eq 0 ] && echo "$AppName 备份成功" || echo "$AppName 备份失败"
    else
        echo "$AppName 未安装"
    fi
}

# 初始化
Init()
{
    useradd -s /bin/false -M $AppUser && echo "新建用户: $AppUser"
    mkdir -p $AppPidDir && echo "新建 $AppName Pid目录: $AppPidDir"
    chown -R $AppUser $AppPidDir && echo "修改 $AppName Pid目录拥有者为 $AppUser"
    mkdir -p $AppLogDir && echo "新建 $AppName 日志目录: $AppLogDir"
    chown -R $AppUser $AppLogDir && echo "修改 $AppName 日志目录拥有者为 $AppUser"
    mkdir -p $AppDataDir && echo "新建 $AppName 数据目录: $AppDataDir"
    chown -R $AppUser $AppDataDir && echo "修改 $AppName 数据目录拥有者为 $AppUser"
    chmod 400 $AppConf && chown $AppUser $AppConf && echo "修改 $AppConf 配置文件拥有者为 $AppUser"
}

# 启动
Start()
{
    Pid
    if [ -n "$AppPid" ]; then
        echo "$AppName 正在运行"
    else
        sudo -u $AppUser $AppProg $AppConf && echo "启动 $AppName" || echo "$AppName 启动失败"
    fi
}

# 停止
Stop()
{
    Pid
    if [ -n "$AppPid" ]; then
        [ -z "$AppPass" ] && sudo -u $AppUser $AppDir/bin/redis-cli -p $AppPort shutdown && echo "停止 $AppName"
        [ -n "$AppPass" ] && sudo -u $AppUser $AppDir/bin/redis-cli -p $AppPort -a $AppPass shutdown && echo "停止 $AppName"
    else
        echo "$AppName 未启动"
    fi
}

# 重启
Restart()
{
    Pid
    [ -n "$AppPid" ] && Stop && sleep 1
    Start
}

# 查询状态
Status()
{
    Pid
    if [ ! -f "$AppProg" ]; then
        echo "$AppName 未安装"
    else
        echo "$AppName 已安装"
        if [ -z "$AppPid" ]; then
            echo "$AppName 未启动"
        else
            echo "$AppName 正在运行"
        fi
    fi
}

# 拷贝配置
Conf()
{
    cp -vf --backup=numbered $ScriptDir/$(basename $AppConf) $AppConf
}

# 终止进程
Kill()
{
    Pid

    if [ -n "$AppPid" ]; then
        kill -9 $AppPid && echo "终止 $AppName 进程" || echo " 终止 $AppName 进程失败"
    else
        echo "$AppName进程未运行"
    fi
}

case "$1" in
    "install"   ) Install;;
    "update"    ) Update;;
    "reinstall" ) Reinstall;;
    "remove"    ) Remove;;
    "backup"    ) Backup;;
    "init"      ) Init;;
    "start"     ) Start;;
    "stop"      ) Stop;;
    "restart"   ) Restart;;
    "status"    ) Status;;
    "conf"      ) Conf;;
    "kill"      ) Kill;;
    *           )
    echo "$ScriptFile install              安装 $AppName"
    echo "$ScriptFile update               更新 $AppName"
    echo "$ScriptFile reinstall            重装 $AppName"
    echo "$ScriptFile remove               删除 $AppName"
    echo "$ScriptFile backup               备份 $AppName"
    echo "$ScriptFile init                 初始化 $AppName"
    echo "$ScriptFile start                启动 $AppName"
    echo "$ScriptFile stop                 停止 $AppName"
    echo "$ScriptFile restart              重启 $AppName"
    echo "$ScriptFile status               查询 $AppName 状态"
    echo "$ScriptFile conf                 拷贝 $AppName 配置"
    echo "$ScriptFile kill                 终止 $AppName 进程"
    ;;
esac
